//Java solution for leetcode (Question No. 54)

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        
        List<Integer> list = new ArrayList<Integer>();
        int startingRow = 0, startingCol = 0, endingRow = matrix.length-1, endingCol = matrix[0].length-1;
        int count = 0, totalElements = matrix.length*matrix[0].length;

        while(count < totalElements){
            for(int i=startingCol; i<=endingCol && count<totalElements; i++){
                list.add(matrix[startingRow][i]);
                count++;
            }
            startingRow++;

            for(int i=startingRow; i<=endingRow && count<totalElements; i++){
                list.add(matrix[i][endingCol]);
                count++;
            }
            endingCol--;

            for(int i=endingCol; i>=startingCol && count<totalElements; i--){
                list.add(matrix[endingRow][i]);
                count++;
            }
            endingRow--;

            for(int i=endingRow; i>=startingRow && count<totalElements; i--){
                list.add(matrix[i][startingCol]);
                count++;
            }
            startingCol++;
        }
        return list;
    }
}